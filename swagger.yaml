openapi: 3.0.0
info:
  description: Documentation for InDesign Cloud Services. This document provides a
    detailed specification of the various exposed APIs, that can be leveraged by developers. 
  version: 0.1.0
  title: InDesign Services.
  contact:
    email: idservices@adobe.com
tags:
  - name: rendition
    description: Rendition APIs.
  - name: dataMerge
    description: Data Merge API.
security:
  - ApiKeyAuth: []
  - BearerAuth: [] 
paths:

  /api/v1/capability/indesign/rendition/jpeg:
    post:
      tags:
        - rendition
      summary: Creates JPEG renditions.
      description: Creates and returns JPEG renditions of a specific InDesign document.
        Output rendition has mimetype 'image/jpeg'. For the structure of StatusCompletedResponse/output/data refer to RenditionOutputData. Also for the list of possible error codes in FailedEvent refer to RenditionFailedData.
      operationId: jpegJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/JPEGRenditionRequest"
        description: Job request object that specifies parameters for the generation of JPEG.
          output.
        required: true
      responses:
        202:
          $ref: '#/components/responses/Accepted'
        400:
          $ref: "#/components/responses/BadParams"
        401:
          $ref: "#/components/responses/Unauthorized"
        403:
          $ref: "#/components/responses/Forbidden"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/InternalServerError"

  /api/v1/capability/indesign/rendition/png:
    post:
      tags:
        - rendition
      summary: Creates PNG renditions.
      description: Creates and returns new PNG renditions of a specific InDesign document.
        Output rendition has mimetype 'image/png'. For the structure of StatusCompletedResponse/output/data refer to RenditionOutputData. Also for the list of possible error codes in FailedEvent refer to RenditionFailedData.
      operationId: pngJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PNGRenditionRequest"
        description: Job request object that specifies parameters for generation of PNG.
          output.
        required: true
      responses:
        202:
          $ref: '#/components/responses/Accepted'
        400:
          $ref: "#/components/responses/BadParams"
        401:
          $ref: "#/components/responses/Unauthorized"
        403:
          $ref: "#/components/responses/Forbidden"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/InternalServerError"

  /api/v1/capability/indesign/rendition/pdf:
    post:
      tags:
        - rendition
      summary: Creates PDF renditions.
      description: Creates and returns new PDF from a specific InDesign document. Output
        rendition has mimetype 'application/pdf'. For the structure of StatusCompletedResponse/output/data refer to RenditionOutputData. Also for the list of possible error codes in FailedEvent refer to RenditionPDFFailedData.
      operationId: pdfPrintJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PDFRenditionRequest"
        description: Job request object that specifies parameters for generation of PDF.
          output.
        required: true
      responses:
        202:
          $ref: '#/components/responses/Accepted'
        400:
          $ref: "#/components/responses/BadParams"
        401:
          $ref: "#/components/responses/Unauthorized"
        403:
          $ref: "#/components/responses/Forbidden"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/InternalServerError"

  /api/v1/capability/indesign/dataMerge/merge:
    post:
      tags:
        - dataMerge
      summary: Performs data merge.
      description: Creates and returns merged InDesign documents or PDFs that are created after merging the data and the given template.
        Output rendition has mimetype 'application/pdf' or 'application/x-indesign'. For the structure of StatusCompletedResponse/output/data refer to DataMergeOutputData. Also for the list of possible error codes in FailedEvent refer to DataMergeFailedData.
      operationId: dataMerge
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DataMergeRequest"
        description: Job request object that specifies parameters for merging the data as per the given template.
        required: true
      responses:
        202:
          $ref: '#/components/responses/Accepted'
        400:
          $ref: "#/components/responses/BadParams"
        401:
          $ref: "#/components/responses/Unauthorized"
        403:
          $ref: "#/components/responses/Forbidden"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/InternalServerError"

  /api/v1/capability/indesign/dataMerge/tags:
    post:
      tags:
        - dataMerge
      summary: Gets data merge tags
      description: Retrieves the data merge tags from the document. For the structure of StatusCompletedResponse/output/data refer to DataMergeTagsOutputData. Also for the list of possible error codes in FailedEvent refer to DataMergeFailedData.
      operationId: dataMergeTags
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DataMergeTagsRequest"
        description: Job request object that specifies parameters for retrieving the data merge tags.
        required: true
      responses:
        202:
          $ref: '#/components/responses/Accepted'
        400:
          $ref: "#/components/responses/BadParams"
        401:
          $ref: "#/components/responses/Unauthorized"
        403:
          $ref: "#/components/responses/Forbidden"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/InternalServerError"

  /api/v1/capability/status/{id}:
    get:
      summary: Gets latest status for a job.
      description: Returns the latest status event of a capability execution.
      parameters:
        - name: id
          in: path
          description: ID, for which the status has to be retrieved.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Status of a capability execution.
          content:
            application/json:
              schema:
                type: object
                oneOf:
                  - $ref: '#/components/schemas/QueuedEvent'
                  - $ref: '#/components/schemas/RunningEvent'
                  - $ref: '#/components/schemas/AssetsDownloadStartedEvent'
                  - $ref: '#/components/schemas/AssetDownloadStartedEvent'
                  - $ref: '#/components/schemas/AssetDownloadCompletedEvent'
                  - $ref: '#/components/schemas/AssetDownloadFailedEvent'
                  - $ref: '#/components/schemas/AssetsDownloadCompletedEvent'
                  - $ref: '#/components/schemas/AssetsUploadStartedEvent'
                  - $ref: '#/components/schemas/AssetUploadStartedEvent'
                  - $ref: '#/components/schemas/AssetUploadCompletedEvent'
                  - $ref: '#/components/schemas/AssetUploadFailedEvent'
                  - $ref: '#/components/schemas/AssetsUploadCompletedEvent'
                  - $ref: '#/components/schemas/CompletedEvent'
                  - $ref: '#/components/schemas/FailedEvent'

  /api/v1/capability/status/all/{id}:
    get:
      summary: Gets status events for a job.
      description: Returns the status of a capability execution. The API returns the latest 10 events in paginated form. The 'nextURL' can be invoked to fetch the next set of events.
      parameters:
        - name: id
          in: path
          description: ID, for which the status has to be retrieved.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Status of a capability execution.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'

  /api/v2/capability:
    post:
      summary: Submit custom capability.
      description: Submit the capability bundle. Returns the URL for posting execution request against the capability
      parameters:
        - name: x-gw-ims-org-id
          in: header
          description: Identifier for IMS organization as defined in Adobe's developer console
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/zip:
            schema:
              type: object
        description: Capability bundle in ZIP format. This describes the capability to App Engine
        required: true
      responses:
        '202':
          description: Status of a capability execution.
          content:
            application/json:
              schema:
                properties:
                  capability:
                    type: string
                    description: Name of capability as specified in capability manifest
                  version:
                    type: string
                    description: Version of capability as specified in capability manifest
                  url:
                    type: string
                    description: URL to submit execution request against the capability
        400:
          $ref: "#/components/responses/BadParams"
        401:
          $ref: "#/components/responses/Unauthorized"
        403:
          $ref: "#/components/responses/Forbidden"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/InternalServerError"

  /api/v2/capability/{product}/{organization}/{capability}:
    post:
      summary: Submit capability execution request.
      description: Define the input assets and parameters with which the capability should be executed against the app engine.
      parameters:
        - name: product
          in: path
          description: Name of the target app engine as specified in capability manifest
          required: true
          schema:
            type: string
        - name: organization
          in: path
          description: organization identifier as reported by response to capability submit request
          required: true
          schema:
            type: string
        - name: capability
          in: path
          description: Name of the capability specified in capability manifest
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BaseJobRequestWithOutput"
        description: Job request object that specifies parameters for the execution of capability.
        required: true
      responses:
        202:
          $ref: '#/components/responses/Accepted'
        400:
          $ref: "#/components/responses/BadParams"
        401:
          $ref: "#/components/responses/Unauthorized"
        403:
          $ref: "#/components/responses/Forbidden"
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/InternalServerError"

servers:
  - url: https://indesign.adobe.io/
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: x-api-key
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  responses:
    Accepted:
      description: The job/capability has been accepted for processing.
      content:
        application/json:
          schema:
            properties:
              id:
                type: string
                description: ID
              status_url:
                type: string
                description: Status URL
    BadParams:
      description: Bad Parameter
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  schemas:
    Error:
      type: object
      properties:
        message:
          type: string
      required:
        - message

    BaseJobRequest:
      description: Base job request for any job.
      required:
        - assets
      properties:
        assets:
          type: array
          items:
            $ref: "#/components/schemas/InputAsset"
          description: Information about the assets, which will be used to process the job.
        params:
          type: object
          properties:
            generalSettings:
              description: General settings.
              type: object
              properties:
                fonts:
                  description: Settings related to fonts.
                  type: object
                  properties:
                    adobeFonts:
                      description: The list of documents to include or exclude from the search for Adobe Fonts. If missing, it means all the documents are to be checked for Adobe Fonts.
                      type: object
                      properties:
                        includeDocuments:
                          description: The list will specify the documents to check for adobe fonts. No other document will be checked for Adobe Fonts. Empty means no document to be checked for. If absent, then all the input documents are to be checked.
                          type: array
                          items:
                            type: string
                            description: This provides a path relative to a temporary base directory (working directory) where the document can be found. It cannot go up using '..' or '/'. Should be a valid file name.
                        excludeDocuments:
                          description: The list will specify the documents to exclude from search. The documents mentioned here will be removed from document list mentioned in includeDocuments parameter or in absence of that parameter from the complete list of documents which can be gathered from the assets params.
                          type: array
                          items:
                            type: string
                            description: This provides a path relative to a temporary base directory (working directory) where the document can be found. It cannot go up using '..' or '/'. Should be a valid file name.
                    fontsDirectories:
                      description: This lists the directories to be used as font directories for the input InDesign documents. "Document Fonts" in parallel to the document will continue to work even without specifying. In absence of this, temporary base directory (working directory) will be considered as a font directory.
                      type: array
                      items:
                        type: string
                        description: This provides a path of a directory relative to a temporary base directory (working directory) where the fonts can be found. It cannot go up using '..' or '/'. Should be a valid path. For specifying working directory, mention '.'.
                links:
                  description: Settings related to links.
                  type: object
                  properties:
                    replaceLinks:
                      type: array
                      items:
                          type: object
                          required:
                          - targetDocument
                          - mapping
                          properties:
                            targetDocument:
                              description: The document in which the relinking is to be done.
                              type: string
                            mapping:
                              type: array
                              items:
                                type: object
                                required:
                                - newAssetRelativePath
                                properties:
                                  currentURI:
                                    type: string
                                    description: The existing URI of the link that needs relinking. If multiple links with this URI are found, all will be relinked. If linkID is provided, this attribute will be ignored. Either one of currentURI or linkID should be present.
                                  linkID:
                                    type: integer
                                    description: The ID of the link which is to be relinked. If currentURI, is also provided it would be ignored. Either one of currentURI or linkID should be present.
                                  newAssetRelativePath:
                                    type: string
                                    description: This provides a path relative to a temporary base directory (working directory) where the asset to be linked to can be found. It cannot go up using '..' or '/'. Should be a valid file name.
                appLogs:
                  description: Describes parameters regarding application logs.
                  type: object
                  properties:
                    logsRelativePath:
                      type: string
                      description: This provides a path to a file, relative to the temporary base directory (working directory). This file is where application's logs are to be dumped.

    BaseJobRequestWithOutput:
      allOf:
        - $ref: '#/components/schemas/BaseJobRequest'
        - description: Base job request for any job with the option to specify output urls.
          type: object
          properties:
            outputs:
              type: array
              items:
                $ref: '#/components/schemas/OutputAsset'

    BaseOutputData:
      description: Base output data for any job. 
      type: object
      properties:
        generalData:
          type: object
          description: Provides any general data corresponding to the job.
          properties:
            appLogs:
              type: object
              description: Provides information regarding the app logs file. This is only present if params/generalSettings/appLogs is provided in input.
              properties:
                created:
                  type: boolean
                  description: True, if the file creation was successful and false otherwise.
                errorReason:
                  type: string
                  description: In case of failure, the reason for the failure.
                logsPath:
                  type: string
                  description: Provided path for the log file.

    WarningResponse:
      description: Response containing the warnings from a process.
      type: object
      properties:
        missingFonts:
          description: List of missing fonts.
          type: array
          items:
            type: string
            description: The name of a missing font.
        missingLinks:
          description: List of missing links.
          type: array
          items:
            type: string
            description: The url of the missing link.
        otherWarnings:
          description: List of remaining warnings.
          type: array
          items:
            type: string
            description: The description of the warning.

    MergeWarningResponse:
      description: Response containing the warnings after a merge process.
      allOf:
        - $ref: '#/components/schemas/WarningResponse'
        - type: object
          properties:
            csvMissingLinks:
              description: List of missing links from CSV.
              type: array
              items:
                type: string
                description: The url of the missing link.
            oversetText:
              description: The information about the overset texts.
              type: array
              items:
                type: object
                properties:
                  page:
                    type: integer
                    description: The page number of overset instance.
                  charactersInOverset:
                    description: The number of characters in overset.
                    type: integer
                  wordsInOverset:
                    description: The number of words in overset.
                    type: integer
                  oversetText:
                    description: The part of text which is in overset.
                    type: string

    RenditionOutputData:
      allOf:
        - $ref: '#/components/schemas/BaseOutputData'
        - description: Output data for a rendition request.
          type: object
          properties:
            outputs:
              type: array
              items:
                type: object
                properties:
                  input:
                    type: string
                    description: The input file path in the working directory.
                  renditions:
                    description: Information about the created renditions.
                    type: array
                    items:
                      $ref: "#/components/schemas/RenditionDef"
                  warnings:
                    $ref: '#/components/schemas/WarningResponse'
                    description: Warnings generated during the rendition request.

    RenditionDef:
      type: object
      properties:
        pageIndex:
          type: string
          description: Refers to the indices of a page/spread in the input document for which the rendition information is provided.
        path:
          description: The paths corresponding to the pages mentioned in pageIndex.
          type: array
          items:
            type: string

    RenditionFailedData:
      allOf:
        - $ref: '#/components/schemas/FailedEvent'
        - description: Failed Event for JPEG and PNG Rendition APIs. For details of error codes refer to ErrorCodesAndDefinitions.
          type: object
          properties:
            data:
              type: object
              properties:
                code:
                  type: integer
                  description: The error code.
                  enum:
                    - 1002
                    - 1004
                    - 2002
                    - 2003
                    - 2005
                    - 2006
                    - 2007
                    - 2008
                    - 2011
                    - 2012
                    - 2013

    RenditionPDFFailedData:
      allOf:
        - $ref: '#/components/schemas/FailedEvent'
        - description: Failed Event for PDF Rendition API. For details of error codes refer to ErrorCodesAndDefinitions.
          type: object
          properties:
            data:
              type: object
              properties:
                code:
                  type: integer
                  description: The error code.
                  enum:
                    - 1002
                    - 1003
                    - 1004
                    - 2002
                    - 2003
                    - 2005
                    - 2006
                    - 2007
                    - 2008
                    - 2011
                    - 2012
                    - 2013

    JPEGRenditionRequest:
      allOf:
        - $ref: '#/components/schemas/BaseJobRequestWithOutput'
        - description: Inputs and properties with which the job should be processed.
          type: object
          required:
          - params
          properties:
            params:
              type: object
              required:
              - targetDocuments
              - jobType
              properties:
                jobType:
                  description: The type of job.
                  type: string
                  default: RENDITION_JPEG
                  enum:
                    - RENDITION_JPEG
                targetDocuments:
                  description: List of documents to render as per the given parameters. Currently, only one document is supported.
                  type: array
                  items:
                    type: string
                  minItems: 1
                  maxItems: 1
                exportingSpread:
                  type: boolean
                  default: false
                  description: Specify true if you consider range as spread numbers, false if you treat range as pages. 
                pageRange:
                  type: string
                  default: All
                  description: Page ranges. The ranges are based on index of the page within
                    the document. Value can be 'All' along with numeral ranges. Also,
                    if exportingSpread is true, this range would represent spread
                    indices in the document.
                quality:
                  type: string
                  description: Defines the quality of the output.
                  default: MEDIUM
                  enum:
                    - LOW
                    - MEDIUM
                    - HIGH
                    - MAXIMUM
                renderingStyle:
                  type: string
                  description: Specifies formatting options for the converted JPEG images.
                  default: BASELINE_ENCODING
                  enum:
                    - BASELINE_ENCODING
                    - PROGRESSIVE_ENCODING
                resolution:
                  type: integer
                  default: 72
                  description: Specifies the resolution of the final image.
                  minimum: 1
                  maximum: 2400
                colorSpace:
                  type: string
                  description: Specifies formatting options for converted JPEG images.
                  default: RGB
                  enum:
                    - RGB
                    - CMYK
                    - GRAY
                embedColorProfile:
                  type: boolean
                  default: true
                  description: Specify true to embed the color profile, false otherwise.
                antiAlias:
                  type: boolean
                  default: true
                  description: If true, uses the anti-aliasing for text and vectors during export.
                simulateOverprint:
                  type: boolean
                  default: false
                  description: If true, simulates the effects of overprinting spot and processes
                    colors in the same way they would occur when you print.
                useDocumentBleeds:
                  type: boolean
                  default: false
                  description: If true, uses the document's bleed settings in the exported JPEG.
                colorSettingsFile:
                  type: string
                  description: The color settings file to be used for generating a rendition.
                outputFileBaseString:
                  type: string
                  description: The name of the output file.
                outputFolderPath:
                  type: string
                  description: The path of the output folder.

    PNGRenditionRequest:
      allOf:
        - $ref: '#/components/schemas/BaseJobRequestWithOutput'
        - description: Inputs and properties with which the job should be processed.
          type: object
          required:
            - params
          properties:
            params:
              type: object
              required:
              - targetDocuments
              - jobType
              properties:
                jobType:
                  description: The type of job.
                  type: string
                  default: RENDITION_PNG
                  enum:
                    - RENDITION_PNG
                targetDocuments:
                  description: List of documents to render as per the given parameters. Currently, only one document is supported.
                  type: array
                  items:
                    type: string
                  minItems: 1
                  maxItems: 1
                exportingSpread:
                  type: boolean
                  default: false
                  description: Specify true for considering range as spread numbers, false for considering range as pages.  
                pageRange:
                  type: string
                  default: All
                  description: Page ranges. The ranges are based on index of the page within
                    the document. Value can be 'All' along with numeral ranges. Also,
                    if exportingSpread is true, this range would represent spread
                    indices in the document.
                quality:
                  type: string
                  description: Defines the quality of the output.
                  default: MEDIUM
                  enum:
                    - LOW
                    - MEDIUM
                    - HIGH
                    - MAXIMUM
                resolution:
                  type: integer
                  default: 72
                  description: Specifies the resolution of the final image.
                  minimum: 1
                  maximum: 2400
                colorSpace:
                  type: string
                  description: Specifies formatting options for converted PNG images.
                  default: RGB
                  enum:
                    - RGB
                    - GRAY
                antiAlias:
                  type: boolean
                  default: true
                  description: If true, use anti-aliasing for text and vectors during export.
                simulateOverprint:
                  type: boolean
                  default: false
                  description: If true, simulates the effects of overprinting spot and processes
                    colors in the same way they would occur when you print.
                useDocumentBleeds:
                  type: boolean
                  default: false
                  description: If true, uses the document's bleed settings in the exported PNG.
                transparentBackground:
                  type: boolean
                  default: false
                  description: If true, uses a transparent background for the exported PNG.
                colorSettingsFile:
                  type: string
                  description: The color settings file to be used for generating a rendition.
                outputFileBaseString:
                  type: string
                  description: The name of the output file.
                outputFolderPath:
                  type: string
                  description: The path of the output folder.

    PDFRenditionRequest:
      description: Inputs and properties with which the job should be processed. In absence of
        params, job will be processed with "High Quality Print" as the
        preset/setting.
      allOf:
        - $ref: '#/components/schemas/BaseJobRequestWithOutput'
        - description: Properties with which the job should be processed.
          type: object
          required:
            - params
          properties:
            params:
              type: object
              required:
              - targetDocuments
              - jobType
              properties:
                jobType:
                  description: The type of job.
                  type: string
                  default: RENDITION_PDFPRINT
                  enum:
                    - RENDITION_PDFPRINT
                targetDocuments:
                  description: List of documents to render as per the given parameters. Currently, only one document is supported.
                  type: array
                  items:
                    type: string
                  minItems: 1
                  maxItems: 1
                exportingSpread:
                  type: boolean
                  default: false
                  description: Specify true if you consider range as spread numbers, false if you consider range as pages. 
                pageRange:
                  type: string
                  default: All
                  description: Page ranges. The ranges are based on index of the page within
                    the document. Value can be 'All' along with numeral ranges. Also,
                    if exportingSpread is true, this range would represent spread
                    indices in the document.
                createSeparateFiles:
                  type: boolean
                  default: false
                  description: Specify true for creating separate PDF files for all the specified
                    pages/spreads.
                optimizeForFastWebView:
                  type: boolean
                  default: true
                  description: Specify true for optimizing the PDF for faster web viewing.
                embedPageThumbnails:
                  type: boolean
                  default: false
                  description: Specify true for embedding page thumbnails.
                includeBookmarks:
                  type: boolean
                  default: false
                  description: If true, displays bookmarks and table of contents entries as
                    links in the bookmarks pane of the PDF document. If false, bookmarks are not exported. 
                includeHyperlinks:
                  type: boolean
                  default: false
                  description: If true, includes hyperlinks when exporting the document.
                exportNonprintingObjects:
                  type: boolean
                  default: false
                  description: If true, makes non-printing objects visible in the PDF document.
                exportGuidesAndGrids:
                  type: boolean
                  default: false
                  description: If true, includes visible guides and baseline grids in the PDF
                    document.
                createTaggedPDF:
                  type: boolean
                  default: true
                  description: If true, creates a tagged PDF file.
                includeInteractiveElements:
                  type: string
                  description: Specifies the option to draw interactive elements.
                  default: DO_NOT_INCLUDE
                  enum:
                    - DO_NOT_INCLUDE
                    - APPEARANCE_ONLY
                exportWhichLayers:
                  type: string
                  description: The layers to be exported.
                  default: EXPORT_ALL_LAYERS
                  enum:
                    - EXPORT_ALL_LAYERS
                    - EXPORT_VISIBLE_LAYERS
                    - EXPORT_VISIBLE_PRINTABLE_LAYERS
                jobOptionsFile:
                  type: string
                  description: The file which will be used as PDF creation settings file during the export. This will take precedence over pdfPreset attribute.
                pdfPreset:
                  type: string
                  description: The export style to be used.
                  default: High Quality Print
                  enum:
                    - High Quality Print
                    - PDF/X-1a:2001
                    - PDF/X-3:2002
                    - PDF/X-4:2008
                    - Press Quality
                    - Smallest File Size
                outputFileBaseString:
                  type: string
                  description: The name of the output file.
                outputFolderPath:
                  type: string
                  description: The path of the output folder.

    DataMergeRequest:
      allOf:
        - $ref: '#/components/schemas/BaseJobRequestWithOutput'
        - description: Inputs for the data merge request.
          type: object
          required:
            - params
          properties:
            params:
              type: object
              required:
              - targetDocument
              - dataSource
              - jobType
              properties:
                jobType:
                  description: The type of job.
                  type: string
                  default: DATAMERGE_MERGE
                  enum:
                    - DATAMERGE_MERGE
                targetDocument:
                  description: The tagged document to be used as template for merging.
                  type: string
                dataSource:
                  description: The data source files to be used.
                  type: string
                outputType:
                  description: The type of required output.
                  type: string
                  enum:
                    - JPEG
                    - PNG
                    - INDD
                    - PDF
                  default: INDD
                exportSettings:
                  type: object
                  description: The settings corresponding to the output format.
                  properties:
                    jobOptionsFile:
                      type: string
                      description: Only relevant if outputType is "PDF". The file, which will be used as PDF creation settings file during the export. This will take precedence over pdfPreset attribute.
                    pdfPreset:
                      type: string
                      description: The PDF export style to be used. This is relevant if outputType is "PDF".
                      default: High Quality Print
                      enum:
                        - High Quality Print
                        - PDF/X-1a:2001
                        - PDF/X-3:2002
                        - PDF/X-4:2008
                        - Press Quality
                        - Smallest File Size
                    quality:
                      type: string
                      description: Defines the quality of the output for JPEG and PNG formats.
                      default: MEDIUM
                      enum:
                        - LOW
                        - MEDIUM
                        - HIGH
                        - MAXIMUM
                    linkImages:
                      description: Only relevant if outputType is "INDD". If true, links images to the target document. If false, embeds linked images, already referred in the target document.
                      type: boolean
                      default: false
                recordRange:
                  description: The ranges of records to process for this job. Value can be 'All' along with numeral ranges. For example, '1-2, 5'.
                  type: string
                allowMultipleRecordsPerPage:
                  description: The number of records to place on each page of the document.
                  type: boolean
                multipleRecordLayoutOptions:
                  description: The options to be used in case allowMultipleRecordsPerPage is set to true.
                  type: object
                  properties:
                    arrangeBy:
                      description: |
                        The order in which to arrange records in the target document.
                        * `ROWS_FIRST` - Arranges records by row.
                        * `COLUMNS_FIRST` - Arranges records by column.
                      type: string
                      enum:
                        - ROWS_FIRST
                        - COLUMNS_FIRST
                    bottomMargin:
                      description: The offset value of the bottom margin in the target document. The values can be specified like '1 pt', '1 pica'. '1' etc. If a number is mentioned in the string, it will be used as a value in pica.
                      type: string
                    topMargin:
                      description: The offset value of the top margin in the target document. The values can be specified like '1 pt', '1 pica'. '1' etc. If a number is mentioned in the string, it will be used as a value in pica.
                      type: string
                    leftMargin:
                      description: The offset value of the left margin in the target document. The values can be specified like '1 pt', '1 pica'. '1' etc. If a number is mentioned in the string, it will be used as a value in pica.
                      type: string
                    rightMargin:
                      description: The offset value of the right margin in the target document. The values can be specified like '1 pt', '1 pica'. '1' etc. If a number is mentioned in the string, it will be used as a value in pica.
                      type: string
                    columnSpacing:
                      description: The amount of spacing between columns of records in the target document. The values can be specified like '1 pt', '1 pica'. '1' etc. If a number is mentioned in the string, it will be used as a value in pica.
                      type: string
                    rowSpacing:
                      description: The amount of spacing between rows of records in the target document. The values can be specified like '1 pt', '1 pica'. '1' etc. If a number is mentioned in the string, it will be used as a value in pica.
                      type: string
                imagePlacementOptions:
                  description: These are the options for image placement which will be used while merging images in the document.
                  type: object
                  properties:
                    centreImage:
                      description: If true, centers the image in the frame while preserving the frame size as content size and proportions. If the content is larger than the frame, content around the edges is obscured by the bounding box of the frame. This doesn't work with 'Content_Aware_Fit' fittingOption.
                      type: boolean
                    fittingOption:
                      description: |
                        Method of fitting content in a frame.
                        * `CONTENT_AWARE_FIT` - Selects best crop region of the content for the frame based on Adobe Sensei. Note: Preserves frame size but it might scale the content size. If this fitting is set, centerImage property is turned-off.
                        * `FILL_PROPORTIONAL` - Resizes content to fill the frame while preserving the proportions of the content. If the content and frame have different proportions, some of the content is obscured by the bounding box of the frame.
                        * `FIT_CONTENT_TO_FRAME` - Resizes content to fit the frame. Note: Content that is a different size than the frame appears stretched or squeezed.
                        * `FIT_FRAME_TO_CONTENT` - Resizes the frame so it fits the content.
                        * `HONOUR_EXISTING_STYLE` - Apply the frame fitting based on existing setting applied on the original frame.
                        * `PRESERVE_SIZES` - Preserves the original sizes of the frame and the content. Note: Content that is larger than the frame is obscured around the edges.
                        * `PROPORTIONAL` - Resizes content to fit the frame while preserving content proportions. If the content and frame have different proportions, an empty space occurs in the frame.
                      type: string
                      enum:
                        - CONTENT_AWARE_FIT
                        - FILL_PROPORTIONAL
                        - FIT_CONTENT_TO_FRAME
                        - FIT_FRAME_TO_CONTENT
                        - HONOUR_EXISTING_STYLE
                        - PRESERVE_SIZES
                        - PROPORTIONAL
                    linkImages:
                      description: If true, links images to the target document. If false, embeds images in the target document. This is in reference to the images being brought in the document while merging.
                      type: boolean
                pagesPerDocument:
                  description: The maximum number of pages per document.
                  type: integer
                removeBlankLines:
                  description: If true, removes blank lines caused by empty fields.
                  type: boolean
                  default: false
                outputFileBaseString:
                  type: string
                  description: The name of the output file.
                outputFolderPath:
                  type: string
                  description: The path of the output folder.

    DataMergeOutputData:
      allOf:
        - $ref: '#/components/schemas/BaseOutputData'
        - description: The data pertaining to the merged records.
          type: object
          properties:
            records:
              description: The information about the records which were processed.
              type: array
              items:
                type: object
                properties:
                  recordIndex:
                    type: string
                    description: Indicates the record numbers for which the data is provided here.
                  outputs:
                    description: The list of outputs corresponding to this record.
                    type: array
                    items:
                      type: object
                      properties:
                        pageIndex:
                          type: string
                          description: Indicates the page numbers in the merged output for which the paths are mentioned below.
                        path:
                          description: The paths corresponding to the pages mentioned in pageIndex.
                          type: array
                          items:
                            type: string
                  warnings:
                    $ref: '#/components/schemas/MergeWarningResponse'
                    description: Warnings generated during the merge.
            warnings:
              $ref: '#/components/schemas/WarningResponse'
              description: Warnings generated for the template.
  
    DataMergeFailedData:
      allOf:
        - $ref: '#/components/schemas/FailedEvent'
        - description: Failed Event for Data Merge API. For details of error codes refer to ErrorCodesAndDefinitions.
          type: object
          properties:
            data:
              type: object
              properties:
                code:
                  type: integer
                  description: The error code.
                  enum:
                    - 1002
                    - 1003
                    - 1004
                    - 2002
                    - 2003
                    - 2005
                    - 2007
                    - 2008
                    - 2011
                    - 2012
                    - 2013

    DataMergeTagsRequest:
      allOf:
        - $ref: '#/components/schemas/BaseJobRequest'
        - description: Filters according to which the information related to data merge tags would be retrieved.
          type: object
          required:
            - params
          properties:
            params:
              type: object
              required:
                - jobType
                - targetDocument
              properties:
                jobType:
                  description: The type of job.
                  type: string
                  default: DATAMERGE_TAGS
                  enum:
                    - DATAMERGE_TAGS
                targetDocument:
                  description: The tagged document to be used for extraction of tags.
                  type: string
                dataSource:
                  description: The data source file to be used for extracting and matching the tags.
                  type: string
                filter:
                  type: string
                  default: All
                  description: Accepted values are "All", "Text", "Image" and "QR". Multiple values can be provided. For example, "Text, Image"
                includePageItemIdentifiers:
                  type: boolean
                  description: If true, the information for associated page items is added to the tags extracted from the document.
                  default: false

    DataMergeTagsOutputData:
      allOf:
        - $ref: '#/components/schemas/BaseOutputData'
        - description: The data corresponding to the tags from the documents and the data source file, if provided.
          type: object
          properties:
            documentTags:
              description: The information about the tags retrieved from the target document.
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                    description: Name of the tag.
                  type:
                    type: string
                    description: Type of the tag.
                    enum:
                      - Image
                      - Text
                      - QR
                  parentPageItems:
                    description: Information about the page items where the tag is present, if it is requested.
                    type: array
                    items:
                      type: object
                      properties:
                        pageItemId:
                          type: integer
                          description: ID of the page item which has the data merge tag within it.
                        pageIndexInSpread:
                          type: integer
                          description: Zero based index of the page (in the spread) on which the page item exists.
                        pageIndexInDocument:
                          type: integer
                          description: Zero based index of the page (in the document) on which the page item exists.
                        pageId:
                          type: integer
                          description: ID of the page on which the page item exists.
                        pageName:
                          type: string
                          description: Name of the page on which the page item exists.
                        spreadIndex:
                          type: integer
                          description: Zero based index of the spread (in the document) on which the page item exists.
                        spreadId:
                          type: integer
                          description: ID of the spread on which the page item exists.
                        parentStoryId:
                          type: integer
                          description: Only valid for text tags. ID of the parent story in which the tag exists.
            dataSourceTags:
              description: The information about the tags from the data source file and their relevance for the target document.
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                    description: Name of the tag.
                  type:
                    type: string
                    description: Type of the tag.
                    enum:
                      - Image
                      - Text
                      - QR
                  status:
                    type: string
                    description: Status or relevance of the tag in context to the target document.
                    enum:
                      - Match
                      - Extra
            dataSourceValidation:
              description: Provided when both target document and data source are given. This will include data from validation of the data source against the target document.
              type: object
              properties:
                isValid:
                  type: boolean
                  description: Indicates whether the provided data source is valid for the document.
                missingTags:
                  description: Provides the information about the tags which are missing from the data source but are required by the document.
                  type: array
                  items:
                    type: string
            warnings:
              $ref: '#/components/schemas/WarningResponse'
              description: Warnings generated during the execution of the request.

    DataMergeTagsFailedData:
      allOf:
        - $ref: '#/components/schemas/FailedEvent'
        - description: Failed Event for Data Merge Tags API. For details of error codes refer to ErrorCodesAndDefinitions.
          type: object
          properties:
            data:
              type: object
              properties:
                code:
                  type: integer
                  description: The error code.
                  enum:
                    - 1002
                    - 2002
                    - 2005
                    - 2007
                    - 2008
                    - 2009
                    - 2010
                    - 2011
                    - 2012
                    - 2013

    BaseEvent:
      type: object
      description: Base event response for any job.
      properties:
        eventId:
          description: Event ID for the latest event.
          type: string
        id:
          description: Capability Execution ID.
          type: string
        timestamp:
          type: number
          description: Epoch time

    QueuedEvent:
      allOf:
        - $ref: '#/components/schemas/BaseEvent'
        - description: Queued Event
          type: object
          properties:
            state:
              type: string
              description: The current state of the job.
              enum:
                - QUEUED

    RunningEvent:
      allOf:
        - $ref: '#/components/schemas/BaseEvent'
        - description: Running Event
          type: object
          properties:
            state:
              type: string
              description: The current state of the job.
              enum:
                - RUNNING
            data:
              type: object
              properties:
                percent:
                  type: string

    AssetsDownloadStartedEvent:
      allOf:
        - $ref: '#/components/schemas/BaseEvent'
        - description: Assets download started Event.
          type: object
          properties:
            state:
              type: string
              description: The current state of the job.
              enum:
                - ASSETS_DOWNLOAD_STARTED
            data:
              type: object
              properties:
                total:
                  type: string
                  description: Number of assets to download.

    AssetDownloadStartedEvent:
      allOf:
        - $ref: '#/components/schemas/BaseEvent'
        - description: Asset download start event.
          type: object
          properties:
            state:
              type: string
              description: The current state of the job.
              enum:
                - ASSET_DOWNLOAD_STARTED
            data:
              type: object

    AssetDownloadCompletedEvent:
      allOf:
        - $ref: '#/components/schemas/BaseEvent'
        - description: Asset download complete event.
          type: object
          properties:
            state:
              type: string
              description: The current state of the job.
              enum:
                - ASSET_DOWNLOAD_COMPLETED
            data:
              type: object              
  
    AssetDownloadFailedEvent:
      allOf:
        - $ref: '#/components/schemas/BaseEvent'
        - description: Asset download failed event.
          type: object
          properties:
            state:
              type: string
              description: The current state of the job.
              enum:
                - ASSET_DOWNLOAD_FAILED
            data:
              type: object
    
    AssetsDownloadCompletedEvent:
      allOf:
        - $ref: '#/components/schemas/BaseEvent'
        - description: Assets download complete event.
          type: object
          properties:
            state:
              type: string
              description: The current state of the job.
              enum:
                - ASSETS_DOWNLOAD_COMPLETED
            data:
              type: object
              
    AssetsUploadStartedEvent:
      allOf:
        - $ref: '#/components/schemas/BaseEvent'
        - description: Assets upload start event
          type: object
          properties:
            state:
              type: string
              description: The current state of the job.
              enum:
                - ASSETS_UPLOAD_STARTED
            data:
              type: object
              properties:
                total:
                  type: string
                  description: Number of assets to upload.

    AssetUploadStartedEvent:
      allOf:
        - $ref: '#/components/schemas/BaseEvent'
        - description: Asset upload start event.
          type: object
          properties:
            state:
              type: string
              description: The current state of the job.
              enum:
                - ASSET_UPLOAD_STARTED
            data:
              type: object
              
    AssetUploadCompletedEvent:
      allOf:
        - $ref: '#/components/schemas/BaseEvent'
        - description: Asset upload completed event.
          type: object
          properties:
            state:
              type: string
              description: The current state of the job.
              enum:
                - ASSET_UPLOAD_COMPLETED
            data:
              type: object
              
    AssetUploadFailedEvent:
      allOf:
        - $ref: '#/components/schemas/BaseEvent'
        - description: Asset upload failed event.
          type: object
          properties:
            state:
              type: string
              description: The current state of the job.
              enum:
                - ASSET_UPLOAD_FAILED
            data:
              type: object
              
    AssetsUploadCompletedEvent:
      allOf:
        - $ref: '#/components/schemas/BaseEvent'
        - description: Assets upload completed event.
          type: object
          properties:
            state:
              type: string
              description: The current state of the job.
              enum:
                - ASSETS_UPLOAD_COMPLETED
            data:
              type: object
              
    CompletedEvent:
      allOf:
        - $ref: '#/components/schemas/BaseEvent'
        - description: Completed Event.
          type: object
          properties:
            state:
              type: string
              description: The current state of the job.
              enum:
                - COMPLETED
            data:
              description: The data returned from execution of capability. If the data is less than 250 kB, then the data would be provided here.
              type: object
            dataURL:
              description: The data returned from execution of capability. If the data is more than 250 kB and less the 20 MB, it will be provided as a presigned URL. If it is more than 20 MB, the job will fail with error code 413.
              type: string

    FailedEvent:
      allOf:
        - $ref: '#/components/schemas/BaseEvent'
        - description: Failed Event
          type: object
          properties:
            state:
              type: string
              description: The current state of the job.
              enum:
                - FAILED
            data:
              type: object
              properties:
                reason:
                  type: string
                  description: The description of the error message.
                code:
                  type: integer
                  description: The error code.

    ErrorCodesAndDefinitions:
      allOf:
        - $ref: '#/components/schemas/CommonErrorCodesAndDefinitions'
        - type: object
          description: Error codes from capabilities and their definitions. The codes also include 5xx error codes which are common across APIs.
          properties:
            1001:
              description: 'Internal script error. Ideally this should not come.'
            1002:
              description: 'Error during processing.'
            1003:
              description: 'No PDF Preset could be set.'
            1004:
              description: 'Unable to create specified output directory.'
            2001:
              description: 'Expected array'
            2002:
              description: 'Expected boolean.'
            2003:
              description: 'Expected integer.'
            2004:
              description: 'Expected number.'
            2005:
              description: 'Expected string.'
            2006:
              description: 'Incorrect range provided.'
            2007:
              description: 'Key not found in object.'
            2008:
              description: 'No matching enum value found.'
            2009:
              description: 'Empty filter provided for extraction of tags.'
            2010:
              description: 'Empty data source found.'
            2011:
              description: 'Relative path not acceptable.'
            2012:
              description: 'Mismatch in jobType.'
            2013:
              description: 'Either the params attribute is not found in the request or it is not in the correct format'

    CommonErrorCodesAndDefinitions:
      type: object
      description: Error codes which are valid for all the capabilities and their definitions
      properties:
        501: 
          description: 'Internal error: Unable to connect to server for communication'
        502:
          description: 'Params error: Unable to send the script to the server. Please check the path of the script'
        503:
          description: 'Internal error: Error parsing the response from application'
        504:
          description: 'Application error: Script execution failed'
        601:
          description: 'Params error: Relative path not acceptable'
        602:
          description: 'Params error: Expected string'
        603:
          description: 'Params error: Expected integer'
        604:
          description: 'Params error: Expected boolean'
        605:
          description: 'Params error: Expected array'
        606:
          description: 'Params error: Expected object'
        701:
          description: 'Capability error: Malformed file'
        702:
          description: 'Capability error: Script did not return anything'
        703:
          description: 'Capability error: Script did not return the response data'
        704:
          description: 'Capability error: Script threw an uncaught exception'
        705:
          description: 'Capability error: Expected array'
        706:
          description: 'Capability error: Expected object after parsing data at dataURL'
        707:
          description: 'Capability error: Relative path not acceptable'
        708:
          description: 'Capability error: Invalid data received'

    StatusResponse:
      type: object
      description:  Response body which is sent back on querying the status API.
      properties:
        events:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/QueuedEvent'
              - $ref: '#/components/schemas/RunningEvent'
              - $ref: '#/components/schemas/AssetsDownloadStartedEvent'
              - $ref: '#/components/schemas/AssetDownloadStartedEvent'
              - $ref: '#/components/schemas/AssetDownloadCompletedEvent'
              - $ref: '#/components/schemas/AssetDownloadFailedEvent'
              - $ref: '#/components/schemas/AssetsDownloadCompletedEvent'
              - $ref: '#/components/schemas/AssetsUploadStartedEvent'
              - $ref: '#/components/schemas/AssetUploadStartedEvent'
              - $ref: '#/components/schemas/AssetUploadCompletedEvent'
              - $ref: '#/components/schemas/AssetUploadFailedEvent'
              - $ref: '#/components/schemas/AssetsUploadCompletedEvent'
              - $ref: '#/components/schemas/CompletedEvent'
              - $ref: '#/components/schemas/FailedEvent'
        paging:
          type: object
          properties:
            prevUrl:
              type: string
              description: url to previous 'n' events
            nextUrl:
              type: string
              description: url to next 'n' events

    InputAsset:
      type: object
      required:
        - source
      properties:
        source:
          type: object
          description: Path from where the asset is to be fetched.
          oneOf:
            - $ref: '#/components/schemas/PathBasedInputAsset'
            - $ref: '#/components/schemas/IdBasedInputAsset'
            - $ref: '#/components/schemas/UrlBasedInputAsset'
            - $ref: '#/components/schemas/AdobeFontsBasedInputAsset'
        destination:
          type: string
          description: This provides a path relative to a temporary base directory (working directory) where resource would be downloaded. This would be used to identify the assets within the parameters.
            It cannot go up using '..' or '/'. Should be a valid file name.

    UrlBasedOutputAsset:
      type: object
      required:
        - url
        - type
      properties:
        url:
          type: string
          description: URL of the asset.
        type:
          type: string
          default: HTTP_PUT
          enum:
            - HTTP_POST
            - HTTP_PUT
        headers:
          type: object
          description: These headers will be added in the PUT or POST request of url. There can be multiple header key value pairs specified here.
          additionalProperties:
            type: string

    UrlBasedInputAsset:
      type: object
      required:
        - url
        - type
      properties:
        url:
          type: string
          description: URL of the asset.
        type:
          type: string
          default: HTTP_GET
          enum:
            - HTTP_GET
        headers:
          type: object
          description: These headers will be added in the GET request of url. There can be multiple header key value pairs specified here.
          additionalProperties:
            type: string
        cache:
          type: object
          required:
            - key
          properties:
            key:
              type: string
              description: Asset identifier
            ttl:
              type: integer
              default: 48
              description: TTL in hours it can be maximum 96hrs and minimum 1hr
            useCache:
              type: boolean
              default: false
              description: Parameter that control enabling or disabling of caching

    IdBasedInputAsset:
      type: object
      required:
        - assetId
        - type
      properties:
        assetId:
          type: string
          description: Asset ID.
        type:
          type: string
          default: ACP
          enum:
            - ACP
        version:
          type: string
          description: version of asset
        token:
          type: string
          description: Token that is required for authentication to download/upload asset.
        cache:
          type: object
          properties:
            key:
              type: string
              description: Asset identifier
            ttl:
              type: integer
              default: 48
              description: TTL in hours it can be maximum 96hrs and minimum 1hr
            useCache:
              type: boolean
              default: false
              description: Parameter that control enabling or disabling of caching

    IdBasedOutputAsset:
          type: object
      required:
        - assetId
        - type
          properties:
        assetId:
          type: string
          description: Asset ID.
        type:
          type: string
          default: ACP
          enum:
            - ACP
        version:
          type: string
          description: version of asset
            token:
              type: string
          description: Token that is required for authentication to download/upload asset.

    PathBasedInputAsset:
      type: object
      required:
        - path
        - repositoryId
        - type
      properties:
        path:
          type: string
          description: Path of the asset.
        repositoryId:
          type: string
          description: Repository ID.
        type:
          type: string
          default: ACP
          enum:
            - ACP
        version:
          type: string
          description: version of asset
        token:
          type: string
          description: Token that is required for authentication to download/upload asset.
        cache:
          type: object
          properties:
            key:
              type: string
              description: Asset identifier
            ttl:
              type: integer
              default: 48
              description: TTL in hours it can be maximum 96hrs and minimum 1hr
            useCache:
              type: boolean
              default: false
              description: Parameter that control enabling or disabling of caching

    PathBasedOutputAsset:
          type: object
      required:
        - path
        - repositoryId
        - type
          properties:
        path:
          type: string
          description: Path of the asset.
        repositoryId:
          type: string
          description: Repository ID.
        type:
          type: string
          default: ACP
          enum:
            - ACP
        version:
          type: string
          description: version of asset
            token:
              type: string
          description: Token that is required for authentication to download/upload asset.

    AdobeFontsBasedInputAsset:
      type: object
      description: One of 'postscriptName' or 'fontId' must be provided.
      required:
        - type
      properties:
        postscriptName:
          type: string
          description: Adobe font postscript name.
        fontId:
          type: string
          description: Adobe font Id. This is same as typekit Id. 
        type:
          type: string
          default: ADOBE_FONT
          enum:
            - ADOBE_FONT

    OutputAsset:
      description: The url, where the output assets are to be posted after the job processing.
      type: object
      required:
        - destination
        - source
      properties:
        destination:
          type: object
          description: Destination from where the asset is to be uploaded.
          oneOf:
            - $ref: '#/components/schemas/PathBasedOutputAsset'
            - $ref: '#/components/schemas/IdBasedOutputAsset'
            - $ref: '#/components/schemas/UrlBasedOutputAsset'
        source:
          type: string
          description: This provides a path relative of the output where resource would be generated.
            It cannot go up using '..' or '/'. Should be a valid file name.
